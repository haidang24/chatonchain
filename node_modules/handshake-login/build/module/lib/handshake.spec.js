import { expect } from 'chai';
import { HandshakeLogin, Strategies } from './handshake';
// Example constants for tests
const SAMPLE_ID_MGR_REQ_URL = 'https://id.htools.work/#/login?state=YWJjZGU=&id=ZXhhbXBsZQ==&callbackUrl=aHR0cHM6Ly9sb2NhbGhvc3QvY2FsbGJhY2s=';
const SAMPLE_RESPONSE_URL = 'https://localhost/callback#eyJkb21haW4iOiJaWGhoYlhCc1pRPT0iLCJkZXZpY2VJZCI6Ik9UWmtZalkyTjJGaU1qQmlOR1l3TUE9PSIsInB1YmxpY0tleSI6IkxTMHRMUzFDUlVkSlRpQlFWVUpNU1VNZ1MwVlpMUzB0TFMwS1RVbEpRMGxxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRm5PRUZOU1VsRFEyZExRMEZuUlVGMVpsWllPVWR4YnpOWlkxQm1ZbGRPVEdsRmNuQkRVbTFsVTNJNWNpdGFNRnBUWld0WmEwSktZbHBzU0dKQmFrOWlTM0IwYjFBeFUzZGlhalIwZDJSd2VVSnlWM2g0VFdSV0syZFpRMGRsTVdoTVZEbERMMllyU21SNmVtazRjbEZaU2pndk5reEJMMUZQZUc1SGRVdG5WekZqWW01WFlUTkRWVXMyYUdoc1ptNWthek5oZUdSbE4wMTZUVWhQYlVsQlNISlJRMmxMYmtVek5VaDBWRnBHWlVGeFFWWnpNVFo1VkZvMWJGZG1ZbVp2YUhOUlNYRnFjMVZVU2pKaU1HeDVhbkl2UzNkWk1FbzBla1JzUXpkYU1VMTNLM1ZtUXpaR2JUWkhkRmRyWm5nM2FHbzRSV3AwYVZCS05tWjJlVU5JYTJ4YU1tVjJNbTlsYlZwNmIwdHpSMEp1YVRCeU1uWnJWVXM1V201TWJYVjBLME5CVVhVME9GTXJPRnBVY0VvdlZ5OVlaWFZ0UTNoVVRXOVdSR05tTjFBeEszbDVWRmNyVW1wM1RXSTVaV2xHVjNCTlRHVTRZelpTVG5WcWFHa3dlUzl0V214dllrUmhOVWQzV0V4SFJXTTRTVGsyVnpsaFJXUktXVFpLVFRKQ09WVjZiWEpvWlhsdVZrNXZRVE5wVlRKSVNWaGxabFZrY21WelZrb3JTamx5WlZGWWNteHRXblIzWm1Sb2VrRmxMM1pGZHpGaFFUaHNXVzByZUhZNVVGUnBibTFTVmpneldHeEhaWFZqT0Zka2JXaHNVM0Z0ZVdsUWVYSnlLMkpZTUhSeGRXcFZUVVZ3Ym5WNlJEZHVXa3h3WkVrNU1rWXliVnBHWldadFFUWlJjbk5zU0ZwcFRUSklZbXA1Y0VoT0swbHBVbTFLUkROaGNsRjBaSE00UmpKeFJqbFViblZhYVRCR1FUaElNMUZuYlZjMFFXOTZRWFpPUldsSWNFRkxjRU52UldsRWRVVXpXWGN2UW1obGIzaE5hVU4zVmk5SU5tcGhSRTR4Y25OUFJXMHZRbXQyYkVSaFFtNU9URXRZVGpSSlQwTnJjV3BZVlZGb2VsVjVSRlJxV2tjelRIYzVOVk50UVN0bFJ6TlhVbTE1VGs5MVluWnhSbnA1VkhFeU1HUTFiM05wU0dWaVJuVTBOR1F6Tm1aak0ycFZWa1pGT0VOQmQwVkJRVkU5UFFvdExTMHRMVVZPUkNCUVZVSk1TVU1nUzBWWkxTMHRMUzA9Iiwic3RyYXRlZ3kiOiJURzlqWVd4VGRHOXlZV2RsVTNSeVlYUmxaM2s9Iiwic2lnbmVkIjoiVG5aTlFVRkRNMFZLYzNsMFEwdHROSFZETjNkbVIybDBhR3h5WmpoUGNHUTVTMUpNYlVOTU1IbzJZVGRXVTI5TE9GTXZTalpMWm1KbUt6bHFkMlJaYWxkdU1EUTVkVkEzWW5CbmQwbG1XVVJDTlM5eVluaDJSMDh6V1hKMlkwVm5RVU01UkRsS05rUm5hR2xUYWtWM1RXNDNabTkwVFhCQlQydzVRMXBLV21aRk1FTTFOME0yV0c5VlNtWlNVRGcyYkZkT1dXbGtUbkUwYlZOM1IxcHRXRUpJTlVWalRYTXJSMWxvTjFoSVEzUjRjMWwwTlVkc1ZHWnlWVWhLZW1rMGIwNUJlbU5VTkRCb01YQjVVa1pUUnprelN6RkJha2hWTm5KTVl6TlFkRVpyUm0xeGNGWlFLelV3U0RSQ1JHOU1XblF2Ym1nNFJHUm9NWEJhWWpGUk1GWlhjRkl4TUROcFRGRXJVamRRYWxJMEsyUklUMUV2TWtvNFMzcFhVSGRzWTJGSWFrMHdibGw0TkhWTFdVMUhUemcwV1dSemVtOTZhR2swY2tkNlpGVlNlazAxT0hBdlpHeHNkRUpVV25KdVZtNVFNVWhvYkRCU0x6UnhOMnBWU1VObVZrNUNZekYwUkdONlNVSXdMMjVTUW00M1dVVTRiWGxXTml0cWIxcHJXRmhqYzNaRlpITkpNVzlwYzJWSE5Tc3ZaVzVSSzA1WlJHSmhVRU4yZEd0WFRVaHJlVkpEZVc1VlVWVlJRVVJsZVZGMlpXRXJSVGhJVUVwR2FubzVTRVpXWWxoRlowZHNlRmd5TXpJMWRtWmFiMEV6Y1VjMmJIZEJNVE5JU2tGS2Qxb3pPVXR3U1ZndmJWQkxUME5rTDJoaFZtdGpWbkEzUlhoNFMyeHFXalIyTDJrNVJYWkhUSGhwU25JMmFsRlBOMUp5U2tveVNsWnpkMDAzYlhaS2VuZGphRlJxYlN0VE1EVmtVV1V6WkRSWFZ6Wk9UWHBNVWxScVRDOTNPWGR5WVhvMFpTOUdVVVpWY0N0SllUTnZhbFZPVERSVU1FUTRaalJ1SzJsUWVHUXZVMHRxVkdGclNXWlZjU3RqVTBzME9XUkRlRkJCTVZwelNXdElVbmwzU0VSVmVIUnRkRWhVTjNwSEx6aHpTbUl2Wnl0eGFrNU5abm8yT0dwUFVFcGliMmR2TVdkbVIzSlFSa1U5In0=';
const SAMPLE_DOMAIN = 'example';
const SAMPLE_CHALLENGE = 'abcde';
const SAMPLE_CALLBACK_URL = 'https://localhost/callback';
const SAMPLE_GOOD_PREFIX = '96db667ab20b4f00';
const SAMPLE_BAD_PREFIX = 'badprefix';
const SAMPLE_GOOD_FINGERPRINT = '9f22098557aacc83fd3d7d2f4bf203d4b1fd3006d7dcf26adec1f186f48efc14';
const SAMPLE_BAD_FINGERPRINT = 'badfingerprint';
describe('Handshake Login', function () {
    const hLogin = new HandshakeLogin();
    hLogin.makeDnsQuery = async function (domain, type = 'TXT') {
        return {
            TXT: {
                '_idmanager.example': [
                    {
                        name: domain,
                        type: 'TXT',
                        value: 'v=0;url=https://id.htools.work',
                    },
                ],
                '96db667ab20b4f00._auth.example': [
                    {
                        name: domain,
                        type: 'TXT',
                        value: 'v=0;fingerprint=9f22098557aacc83fd3d7d2f4bf203d4b1fd3006d7dcf26adec1f186f48efc14',
                    },
                ],
                'badprefix._auth.example': null,
            },
        }[type][domain];
    };
    it('Makes DNS queries', async function () {
        // DNS
        const hLoginWithDNS = new HandshakeLogin();
        const dnsResponse = await hLoginWithDNS.makeDnsQuery('rithvik', 'TXT');
        expect(dnsResponse).to.be.an('array').that.is.not.empty;
        // DOH
        const hLoginWithDOH = new HandshakeLogin({ useDoh: true });
        const dohResponse = await hLoginWithDOH.makeDnsQuery('rithvik', 'TXT');
        expect(dohResponse).to.be.an('array').that.is.not.empty;
        // Negative tests
        expect(async () => await hLoginWithDOH.makeDnsQuery(null, null)).to.throw;
    });
    it('Gets ID Manager', async function () {
        // Explicit ID Manager is not set
        hLogin.setRequestData({
            domain: 'noid.' + SAMPLE_DOMAIN,
            challenge: SAMPLE_CHALLENGE,
            callbackUrl: SAMPLE_CALLBACK_URL,
        });
        expect(await hLogin.getIdManager()).to.equal('https://id.namebase.io');
        // Explicit ID Manager is set
        hLogin.setRequestData({
            domain: SAMPLE_DOMAIN,
            challenge: SAMPLE_CHALLENGE,
            callbackUrl: SAMPLE_CALLBACK_URL,
        });
        expect(await hLogin.getIdManager()).to.be.a.string;
    });
    it('Generates Request URL', async function () {
        const reqUrl = await hLogin.generateRequestUrl({
            domain: SAMPLE_DOMAIN,
            challenge: SAMPLE_CHALLENGE,
            callbackUrl: SAMPLE_CALLBACK_URL,
        });
        expect(reqUrl).to.equal(SAMPLE_ID_MGR_REQ_URL);
    });
    it('Parses Request Data from URL', async function () {
        const url = SAMPLE_ID_MGR_REQ_URL;
        const reqData = hLogin.parseRequestDataFromUrl(url);
        expect(reqData).to.deep.equal({
            domain: SAMPLE_DOMAIN,
            challenge: SAMPLE_CHALLENGE,
            callbackUrl: SAMPLE_CALLBACK_URL,
        });
    });
    it('Checks if device is registered', async function () {
        hLogin.domain = SAMPLE_DOMAIN;
        hLogin.prefix = SAMPLE_GOOD_PREFIX;
        const goodDeviceRecord = await hLogin.getDeviceRecord();
        expect(goodDeviceRecord).to.have.keys(['v', 'fingerprint']);
        hLogin.prefix = SAMPLE_BAD_PREFIX;
        const nxDeviceRecord = await hLogin.getDeviceRecord();
        expect(nxDeviceRecord).to.be.null;
    });
    it('Formats DNS TXT Record to add', async function () {
        hLogin.domain = SAMPLE_DOMAIN;
        hLogin.prefix = SAMPLE_GOOD_PREFIX;
        hLogin.strategy.domain = SAMPLE_DOMAIN;
        hLogin.strategy.identity = {
            fingerprint: SAMPLE_GOOD_FINGERPRINT,
            name: null,
            publicKey: null,
            privateKey: null,
        };
        const dnsRecord = await hLogin.generateDnsRecord();
        expect(dnsRecord).to.have.keys(['type', 'name', 'value']);
    });
    it('Verifies fingerprint with DNS', async function () {
        hLogin.domain = SAMPLE_DOMAIN;
        hLogin.prefix = SAMPLE_GOOD_PREFIX;
        const goodFingerprintVerified = await hLogin.verifyFingerprintWithDNS(SAMPLE_GOOD_FINGERPRINT);
        expect(goodFingerprintVerified).to.be.true;
        hLogin.prefix = SAMPLE_GOOD_PREFIX;
        const badFingerprintVerified = await hLogin.verifyFingerprintWithDNS(SAMPLE_BAD_FINGERPRINT);
        expect(badFingerprintVerified).to.be.false;
    });
    it('Selects a Strategy', async function () {
        hLogin.useStrategy(new Strategies.LocalStorageStrategy.strategy());
        expect(hLogin.strategy).to.be.an.instanceOf(Strategies.LocalStorageStrategy.strategy);
    });
    it('Generates Response URL', async function () {
        hLogin.setRequestData({
            domain: SAMPLE_DOMAIN,
            challenge: SAMPLE_CHALLENGE,
            callbackUrl: SAMPLE_CALLBACK_URL,
        });
        await hLogin.getDeviceId();
        (await hLogin.getIdentity()) || (await hLogin.generateIdentity());
        const responseUrl = await hLogin.generateResponseUrl();
        expect(responseUrl).to.be.a.string;
    });
    it('Parses Response Data from URL', async function () {
        const responseData = hLogin.parseResponseDataFromUrl(SAMPLE_RESPONSE_URL);
        expect(responseData).to.include.all.keys([
            'domain',
            'prefix',
            'publicKey',
            'signed',
        ]);
    });
    it('Verifies Response Signature', async function () {
        hLogin.parseResponseDataFromUrl(SAMPLE_RESPONSE_URL);
        const challenge = SAMPLE_CHALLENGE;
        const verified = await hLogin.verifyResponseData(challenge);
        expect(verified).to.be.true;
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFuZHNoYWtlLnNwZWMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL2hhbmRzaGFrZS5zcGVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFFOUIsT0FBTyxFQUFFLGNBQWMsRUFBRSxVQUFVLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFekQsOEJBQThCO0FBQzlCLE1BQU0scUJBQXFCLEdBQ3pCLGdIQUFnSCxDQUFDO0FBQ25ILE1BQU0sbUJBQW1CLEdBQ3ZCLHl3RkFBeXdGLENBQUM7QUFDNXdGLE1BQU0sYUFBYSxHQUFHLFNBQVMsQ0FBQztBQUNoQyxNQUFNLGdCQUFnQixHQUFHLE9BQU8sQ0FBQztBQUNqQyxNQUFNLG1CQUFtQixHQUFHLDRCQUE0QixDQUFDO0FBQ3pELE1BQU0sa0JBQWtCLEdBQUcsa0JBQWtCLENBQUM7QUFDOUMsTUFBTSxpQkFBaUIsR0FBRyxXQUFXLENBQUM7QUFDdEMsTUFBTSx1QkFBdUIsR0FDM0Isa0VBQWtFLENBQUM7QUFDckUsTUFBTSxzQkFBc0IsR0FBRyxnQkFBZ0IsQ0FBQztBQUVoRCxRQUFRLENBQUMsaUJBQWlCLEVBQUU7SUFDMUIsTUFBTSxNQUFNLEdBQUcsSUFBSSxjQUFjLEVBQUUsQ0FBQztJQUVwQyxNQUFNLENBQUMsWUFBWSxHQUFHLEtBQUssV0FDekIsTUFBYyxFQUNkLElBQUksR0FBRyxLQUFLO1FBRVosT0FBTztZQUNMLEdBQUcsRUFBRTtnQkFDSCxvQkFBb0IsRUFBRTtvQkFDcEI7d0JBQ0UsSUFBSSxFQUFFLE1BQU07d0JBQ1osSUFBSSxFQUFFLEtBQUs7d0JBQ1gsS0FBSyxFQUFFLGdDQUFnQztxQkFDeEM7aUJBQ0Y7Z0JBQ0QsZ0NBQWdDLEVBQUU7b0JBQ2hDO3dCQUNFLElBQUksRUFBRSxNQUFNO3dCQUNaLElBQUksRUFBRSxLQUFLO3dCQUNYLEtBQUssRUFDSCxrRkFBa0Y7cUJBQ3JG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