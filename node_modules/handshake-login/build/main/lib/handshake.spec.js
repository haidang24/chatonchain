"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const handshake_1 = require("./handshake");
// Example constants for tests
const SAMPLE_ID_MGR_REQ_URL = 'https://id.htools.work/#/login?state=YWJjZGU=&id=ZXhhbXBsZQ==&callbackUrl=aHR0cHM6Ly9sb2NhbGhvc3QvY2FsbGJhY2s=';
const SAMPLE_RESPONSE_URL = 'https://localhost/callback#eyJkb21haW4iOiJaWGhoYlhCc1pRPT0iLCJkZXZpY2VJZCI6Ik9UWmtZalkyTjJGaU1qQmlOR1l3TUE9PSIsInB1YmxpY0tleSI6IkxTMHRMUzFDUlVkSlRpQlFWVUpNU1VNZ1MwVlpMUzB0TFMwS1RVbEpRMGxxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRm5PRUZOU1VsRFEyZExRMEZuUlVGMVpsWllPVWR4YnpOWlkxQm1ZbGRPVEdsRmNuQkRVbTFsVTNJNWNpdGFNRnBUWld0WmEwSktZbHBzU0dKQmFrOWlTM0IwYjFBeFUzZGlhalIwZDJSd2VVSnlWM2g0VFdSV0syZFpRMGRsTVdoTVZEbERMMllyU21SNmVtazRjbEZaU2pndk5reEJMMUZQZUc1SGRVdG5WekZqWW01WFlUTkRWVXMyYUdoc1ptNWthek5oZUdSbE4wMTZUVWhQYlVsQlNISlJRMmxMYmtVek5VaDBWRnBHWlVGeFFWWnpNVFo1VkZvMWJGZG1ZbVp2YUhOUlNYRnFjMVZVU2pKaU1HeDVhbkl2UzNkWk1FbzBla1JzUXpkYU1VMTNLM1ZtUXpaR2JUWkhkRmRyWm5nM2FHbzRSV3AwYVZCS05tWjJlVU5JYTJ4YU1tVjJNbTlsYlZwNmIwdHpSMEp1YVRCeU1uWnJWVXM1V201TWJYVjBLME5CVVhVME9GTXJPRnBVY0VvdlZ5OVlaWFZ0UTNoVVRXOVdSR05tTjFBeEszbDVWRmNyVW1wM1RXSTVaV2xHVjNCTlRHVTRZelpTVG5WcWFHa3dlUzl0V214dllrUmhOVWQzV0V4SFJXTTRTVGsyVnpsaFJXUktXVFpLVFRKQ09WVjZiWEpvWlhsdVZrNXZRVE5wVlRKSVNWaGxabFZrY21WelZrb3JTamx5WlZGWWNteHRXblIzWm1Sb2VrRmxMM1pGZHpGaFFUaHNXVzByZUhZNVVGUnBibTFTVmpneldHeEhaWFZqT0Zka2JXaHNVM0Z0ZVdsUWVYSnlLMkpZTUhSeGRXcFZUVVZ3Ym5WNlJEZHVXa3h3WkVrNU1rWXliVnBHWldadFFUWlJjbk5zU0ZwcFRUSklZbXA1Y0VoT0swbHBVbTFLUkROaGNsRjBaSE00UmpKeFJqbFViblZhYVRCR1FUaElNMUZuYlZjMFFXOTZRWFpPUldsSWNFRkxjRU52UldsRWRVVXpXWGN2UW1obGIzaE5hVU4zVmk5SU5tcGhSRTR4Y25OUFJXMHZRbXQyYkVSaFFtNU9URXRZVGpSSlQwTnJjV3BZVlZGb2VsVjVSRlJxV2tjelRIYzVOVk50UVN0bFJ6TlhVbTE1VGs5MVluWnhSbnA1VkhFeU1HUTFiM05wU0dWaVJuVTBOR1F6Tm1aak0ycFZWa1pGT0VOQmQwVkJRVkU5UFFvdExTMHRMVVZPUkNCUVZVSk1TVU1nUzBWWkxTMHRMUzA9Iiwic3RyYXRlZ3kiOiJURzlqWVd4VGRHOXlZV2RsVTNSeVlYUmxaM2s9Iiwic2lnbmVkIjoiVG5aTlFVRkRNMFZLYzNsMFEwdHROSFZETjNkbVIybDBhR3h5WmpoUGNHUTVTMUpNYlVOTU1IbzJZVGRXVTI5TE9GTXZTalpMWm1KbUt6bHFkMlJaYWxkdU1EUTVkVkEzWW5CbmQwbG1XVVJDTlM5eVluaDJSMDh6V1hKMlkwVm5RVU01UkRsS05rUm5hR2xUYWtWM1RXNDNabTkwVFhCQlQydzVRMXBLV21aRk1FTTFOME0yV0c5VlNtWlNVRGcyYkZkT1dXbGtUbkUwYlZOM1IxcHRXRUpJTlVWalRYTXJSMWxvTjFoSVEzUjRjMWwwTlVkc1ZHWnlWVWhLZW1rMGIwNUJlbU5VTkRCb01YQjVVa1pUUnprelN6RkJha2hWTm5KTVl6TlFkRVpyUm0xeGNGWlFLelV3U0RSQ1JHOU1XblF2Ym1nNFJHUm9NWEJhWWpGUk1GWlhjRkl4TUROcFRGRXJVamRRYWxJMEsyUklUMUV2TWtvNFMzcFhVSGRzWTJGSWFrMHdibGw0TkhWTFdVMUhUemcwV1dSemVtOTZhR2swY2tkNlpGVlNlazAxT0hBdlpHeHNkRUpVV25KdVZtNVFNVWhvYkRCU0x6UnhOMnBWU1VObVZrNUNZekYwUkdONlNVSXdMMjVTUW00M1dVVTRiWGxXTml0cWIxcHJXRmhqYzNaRlpITkpNVzlwYzJWSE5Tc3ZaVzVSSzA1WlJHSmhVRU4yZEd0WFRVaHJlVkpEZVc1VlVWVlJRVVJsZVZGMlpXRXJSVGhJVUVwR2FubzVTRVpXWWxoRlowZHNlRmd5TXpJMWRtWmFiMEV6Y1VjMmJIZEJNVE5JU2tGS2Qxb3pPVXR3U1ZndmJWQkxUME5rTDJoaFZtdGpWbkEzUlhoNFMyeHFXalIyTDJrNVJYWkhUSGhwU25JMmFsRlBOMUp5U2tveVNsWnpkMDAzYlhaS2VuZGphRlJxYlN0VE1EVmtVV1V6WkRSWFZ6Wk9UWHBNVWxScVRDOTNPWGR5WVhvMFpTOUdVVVpWY0N0SllUTnZhbFZPVERSVU1FUTRaalJ1SzJsUWVHUXZVMHRxVkdGclNXWlZjU3RqVTBzME9XUkRlRkJCTVZwelNXdElVbmwzU0VSVmVIUnRkRWhVTjNwSEx6aHpTbUl2Wnl0eGFrNU5abm8yT0dwUFVFcGliMmR2TVdkbVIzSlFSa1U5In0=';
const SAMPLE_DOMAIN = 'example';
const SAMPLE_CHALLENGE = 'abcde';
const SAMPLE_CALLBACK_URL = 'https://localhost/callback';
const SAMPLE_GOOD_PREFIX = '96db667ab20b4f00';
const SAMPLE_BAD_PREFIX = 'badprefix';
const SAMPLE_GOOD_FINGERPRINT = '9f22098557aacc83fd3d7d2f4bf203d4b1fd3006d7dcf26adec1f186f48efc14';
const SAMPLE_BAD_FINGERPRINT = 'badfingerprint';
describe('Handshake Login', function () {
    const hLogin = new handshake_1.HandshakeLogin();
    hLogin.makeDnsQuery = async function (domain, type = 'TXT') {
        return {
            TXT: {
                '_idmanager.example': [
                    {
                        name: domain,
                        type: 'TXT',
                        value: 'v=0;url=https://id.htools.work',
                    },
                ],
                '96db667ab20b4f00._auth.example': [
                    {
                        name: domain,
                        type: 'TXT',
                        value: 'v=0;fingerprint=9f22098557aacc83fd3d7d2f4bf203d4b1fd3006d7dcf26adec1f186f48efc14',
                    },
                ],
                'badprefix._auth.example': null,
            },
        }[type][domain];
    };
    it('Makes DNS queries', async function () {
        // DNS
        const hLoginWithDNS = new handshake_1.HandshakeLogin();
        const dnsResponse = await hLoginWithDNS.makeDnsQuery('rithvik', 'TXT');
        chai_1.expect(dnsResponse).to.be.an('array').that.is.not.empty;
        // DOH
        const hLoginWithDOH = new handshake_1.HandshakeLogin({ useDoh: true });
        const dohResponse = await hLoginWithDOH.makeDnsQuery('rithvik', 'TXT');
        chai_1.expect(dohResponse).to.be.an('array').that.is.not.empty;
        // Negative tests
        chai_1.expect(async () => await hLoginWithDOH.makeDnsQuery(null, null)).to.throw;
    });
    it('Gets ID Manager', async function () {
        // Explicit ID Manager is not set
        hLogin.setRequestData({
            domain: 'noid.' + SAMPLE_DOMAIN,
            challenge: SAMPLE_CHALLENGE,
            callbackUrl: SAMPLE_CALLBACK_URL,
        });
        chai_1.expect(await hLogin.getIdManager()).to.equal('https://id.namebase.io');
        // Explicit ID Manager is set
        hLogin.setRequestData({
            domain: SAMPLE_DOMAIN,
            challenge: SAMPLE_CHALLENGE,
            callbackUrl: SAMPLE_CALLBACK_URL,
        });
        chai_1.expect(await hLogin.getIdManager()).to.be.a.string;
    });
    it('Generates Request URL', async function () {
        const reqUrl = await hLogin.generateRequestUrl({
            domain: SAMPLE_DOMAIN,
            challenge: SAMPLE_CHALLENGE,
            callbackUrl: SAMPLE_CALLBACK_URL,
        });
        chai_1.expect(reqUrl).to.equal(SAMPLE_ID_MGR_REQ_URL);
    });
    it('Parses Request Data from URL', async function () {
        const url = SAMPLE_ID_MGR_REQ_URL;
        const reqData = hLogin.parseRequestDataFromUrl(url);
        chai_1.expect(reqData).to.deep.equal({
            domain: SAMPLE_DOMAIN,
            challenge: SAMPLE_CHALLENGE,
            callbackUrl: SAMPLE_CALLBACK_URL,
        });
    });
    it('Checks if device is registered', async function () {
        hLogin.domain = SAMPLE_DOMAIN;
        hLogin.prefix = SAMPLE_GOOD_PREFIX;
        const goodDeviceRecord = await hLogin.getDeviceRecord();
        chai_1.expect(goodDeviceRecord).to.have.keys(['v', 'fingerprint']);
        hLogin.prefix = SAMPLE_BAD_PREFIX;
        const nxDeviceRecord = await hLogin.getDeviceRecord();
        chai_1.expect(nxDeviceRecord).to.be.null;
    });
    it('Formats DNS TXT Record to add', async function () {
        hLogin.domain = SAMPLE_DOMAIN;
        hLogin.prefix = SAMPLE_GOOD_PREFIX;
        hLogin.strategy.domain = SAMPLE_DOMAIN;
        hLogin.strategy.identity = {
            fingerprint: SAMPLE_GOOD_FINGERPRINT,
            name: null,
            publicKey: null,
            privateKey: null,
        };
        const dnsRecord = await hLogin.generateDnsRecord();
        chai_1.expect(dnsRecord).to.have.keys(['type', 'name', 'value']);
    });
    it('Verifies fingerprint with DNS', async function () {
        hLogin.domain = SAMPLE_DOMAIN;
        hLogin.prefix = SAMPLE_GOOD_PREFIX;
        const goodFingerprintVerified = await hLogin.verifyFingerprintWithDNS(SAMPLE_GOOD_FINGERPRINT);
        chai_1.expect(goodFingerprintVerified).to.be.true;
        hLogin.prefix = SAMPLE_GOOD_PREFIX;
        const badFingerprintVerified = await hLogin.verifyFingerprintWithDNS(SAMPLE_BAD_FINGERPRINT);
        chai_1.expect(badFingerprintVerified).to.be.false;
    });
    it('Selects a Strategy', async function () {
        hLogin.useStrategy(new handshake_1.Strategies.LocalStorageStrategy.strategy());
        chai_1.expect(hLogin.strategy).to.be.an.instanceOf(handshake_1.Strategies.LocalStorageStrategy.strategy);
    });
    it('Generates Response URL', async function () {
        hLogin.setRequestData({
            domain: SAMPLE_DOMAIN,
            challenge: SAMPLE_CHALLENGE,
            callbackUrl: SAMPLE_CALLBACK_URL,
        });
        await hLogin.getDeviceId();
        (await hLogin.getIdentity()) || (await hLogin.generateIdentity());
        const responseUrl = await hLogin.generateResponseUrl();
        chai_1.expect(responseUrl).to.be.a.string;
    });
    it('Parses Response Data from URL', async function () {
        const responseData = hLogin.parseResponseDataFromUrl(SAMPLE_RESPONSE_URL);
        chai_1.expect(responseData).to.include.all.keys([
            'domain',
            'prefix',
            'publicKey',
            'signed',
        ]);
    });
    it('Verifies Response Signature', async function () {
        hLogin.parseResponseDataFromUrl(SAMPLE_RESPONSE_URL);
        const challenge = SAMPLE_CHALLENGE;
        const verified = await hLogin.verifyResponseData(challenge);
        chai_1.expect(verified).to.be.true;
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFuZHNoYWtlLnNwZWMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL2hhbmRzaGFrZS5zcGVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQThCO0FBRTlCLDJDQUF5RDtBQUV6RCw4QkFBOEI7QUFDOUIsTUFBTSxxQkFBcUIsR0FDekIsZ0hBQWdILENBQUM7QUFDbkgsTUFBTSxtQkFBbUIsR0FDdkIseXdGQUF5d0YsQ0FBQztBQUM1d0YsTUFBTSxhQUFhLEdBQUcsU0FBUyxDQUFDO0FBQ2hDLE1BQU0sZ0JBQWdCLEdBQUcsT0FBTyxDQUFDO0FBQ2pDLE1BQU0sbUJBQW1CLEdBQUcsNEJBQTRCLENBQUM7QUFDekQsTUFBTSxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztBQUM5QyxNQUFNLGlCQUFpQixHQUFHLFdBQVcsQ0FBQztBQUN0QyxNQUFNLHVCQUF1QixHQUMzQixrRUFBa0UsQ0FBQztBQUNyRSxNQUFNLHNCQUFzQixHQUFHLGdCQUFnQixDQUFDO0FBRWhELFFBQVEsQ0FBQyxpQkFBaUIsRUFBRTtJQUMxQixNQUFNLE1BQU0sR0FBRyxJQUFJLDBCQUFjLEVBQUUsQ0FBQztJQUVwQyxNQUFNLENBQUMsWUFBWSxHQUFHLEtBQUssV0FDekIsTUFBYyxFQUNkLElBQUksR0FBRyxLQUFLO1FBRVosT0FBTztZQUNMLEdBQUcsRUFBRTtnQkFDSCxvQkFBb0IsRUFBRTtvQkFDcEI7d0JBQ0UsSUFBSSxFQUFFLE1BQU07d0JBQ1osSUFBSSxFQUFFLEtBQUs7d0JBQ1gsS0FBSyxFQUFFLGdDQUFnQztxQkFDeEM7aUJBQ0Y7Z0JBQ0QsZ0NBQWdDLEVBQUU7b0JBQ2hDO3dCQUNFLElBQUksRUFBRSxNQUFNO3dCQUNaLElBQUksRUFBRSxLQUFLO3dCQUNYLEtBQUssRUFDSCxrRkFBa0Y7cUJBQ3JGO2lCQUNGO2dCQUNELHlCQUF5QixFQUFFLElBQUk7YUFDaEM7U0FDRixDQUFDLElBQUksQ0FBQyxDQUFDLE1B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